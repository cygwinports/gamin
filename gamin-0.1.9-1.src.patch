diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/libgamin/Makefile.am src/gamin-0.1.9/libgamin/Makefile.am
--- origsrc/gamin-0.1.9/libgamin/Makefile.am	2007-07-04 08:36:48.000000000 -0500
+++ src/gamin-0.1.9/libgamin/Makefile.am	2007-08-12 15:21:57.578125000 -0500
@@ -40,11 +40,13 @@
 libgamin_1_la_LIBADD =
 
 libgamin_1_la_LDFLAGS = -Wl,--version-script=$(srcdir)/gamin_sym.version \
+                        -no-undefined \
                         -version-info @GAMIN_VERSION_INFO@ @THREAD_LIBS@
 
 libfam_la_SOURCES = $(libgamin_1_la_SOURCES)
 libfam_la_LIBADD = $(libgamin_1_la_LIBADD)
 libfam_la_LDFLAGS = -Wl,--version-script=$(srcdir)/gamin_sym.version	\
+                    -no-undefined \
                     -version-info @FAM_VERSION_INFO@ @THREAD_LIBS@
 
 #
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/libgamin/gam_api.c src/gamin-0.1.9/libgamin/gam_api.c
--- origsrc/gamin-0.1.9/libgamin/gam_api.c	2007-07-04 08:36:48.000000000 -0500
+++ src/gamin-0.1.9/libgamin/gam_api.c	2007-08-12 15:31:32.187500000 -0500
@@ -14,6 +14,16 @@
 #include <sys/socket.h>
 #include <sys/un.h>
 #include <sys/uio.h>
+#include <string.h>
+
+#ifdef __CYGWIN__
+
+#include <sys/cygwin.h>
+#define _WIN32_WINNT 0x0500
+#include <windows.h>
+
+#endif  /* __CYGWIN__ */ 
+
 #include "fam.h"
 #include "gam_protocol.h"
 #include "gam_data.h"
@@ -192,6 +202,61 @@
     return (ret);
 }
 
+/**
+ * gamin_check_not_fat:
+ *
+ * On Cygwin, check if socket dir is on not a FAT drive.  This is
+ * necessary because gamin_check_secure_{dir,path} check permissions,
+ * and FAT drives do not have a permissions model; everything is 755.
+ *
+ * On other platforms, we assume that the socket dir is not on FAT.
+ *
+ * Returns 1 if <b>not</b> on a FAT drive, 0 if on FAT, -1 in case of error.
+ */
+static int
+gamin_check_not_fat (void)
+{
+#ifdef __CYGWIN__
+  OSVERSIONINFO osvi;
+  const char *cygpath;
+  char winpath[256];
+  char rootdir[256];
+  char volname[256];
+  char fsname[256];
+  DWORD sernum = 0;
+  DWORD maxlen = 0;
+  DWORD flags = 0;
+
+  osvi.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
+  GetVersionEx(&osvi);
+
+  if (osvi.dwPlatformId == 1)   /* VER_PLATFORM_WIN32_WINDOWS */
+    {
+      return 0;      /* Win9x/Me, must be FAT */
+    }
+
+  cygpath = gamin_get_socket_dir();
+
+  cygwin_conv_to_full_win32_path (cygpath, winpath);
+  if (!GetVolumePathName(winpath, rootdir, 256))
+    {
+      fprintf (stderr, "GetVolumePathName: %d\n", GetLastError ());
+      return -1;
+    }
+  if (!GetVolumeInformation (rootdir, volname, 256, &sernum,
+                             &maxlen, &flags, fsname, 256))
+    {
+      fprintf (stderr, "GetVolumeInformation: %d\n", GetLastError ());
+      return -1;
+    }
+  if (strncmp(fsname, "FAT", 3) == 0)
+    {
+      return 0;
+    }
+#endif  /* __CYGWIN__ */
+  return 1;
+}
+
 
 
 /************************************************************************
@@ -213,6 +278,7 @@
     char *dir;
     struct stat st;
     int ret;
+    int not_fat = gamin_check_not_fat();
 
     dir = gamin_get_socket_dir();
     if (dir == NULL) {
@@ -224,7 +290,7 @@
 	free(dir);
 	return(0);
     }
-    if (st.st_uid != getuid()) {
+    if (not_fat && (st.st_uid != getuid())) {
 	gam_error(DEBUG_INFO,
 		  "Socket directory %s has different owner\n",
 		  dir);
@@ -235,13 +301,13 @@
 		  dir);
 	goto unsafe;
     }
-    if (st.st_mode & (S_IRWXG|S_IRWXO)) {
+    if (not_fat && (st.st_mode & (S_IRWXG|S_IRWXO))) {
 	gam_error(DEBUG_INFO,
 		  "Socket directory %s has wrong permissions\n",
 		  dir);
 	goto unsafe;
     }
-    if (((st.st_mode & (S_IRWXU)) != S_IRWXU)) {
+    if (not_fat && ((st.st_mode & (S_IRWXU)) != S_IRWXU)) {
 	gam_error(DEBUG_INFO,
 		  "Socket directory %s has wrong permissions\n",
 		  dir);
@@ -289,6 +355,7 @@
 {
     struct stat st;
     int ret;
+    int not_fat = gamin_check_not_fat();
 
     ret = gamin_check_secure_dir();
     if (ret <= 0)
@@ -301,7 +368,7 @@
     if (ret < 0)
 	return(0);
     
-    if (st.st_uid != getuid()) {
+    if (not_fat && (st.st_uid != getuid())) {
 	gam_error(DEBUG_INFO,
 		  "Socket %s has different owner\n",
 		  path);
@@ -314,7 +381,7 @@
 	goto cleanup;
     }
 #endif
-    if (st.st_mode & (S_IRWXG|S_IRWXO)) {
+    if (not_fat && (st.st_mode & (S_IRWXG|S_IRWXO))) {
 	gam_error(DEBUG_INFO,
 		  "Socket %s has wrong permissions\n",
 		  path);
@@ -429,9 +496,9 @@
     char data[2] = { 0, 0 };
     int written;
 #if defined(HAVE_CMSGCRED) && !defined(LOCAL_CREDS)
-    struct {
+    union {
 	    struct cmsghdr hdr;
-	    struct cmsgcred cred;
+	    char cred[CMSG_SPACE (sizeof (struct cmsgcred))];
     } cmsg;
     struct iovec iov;
     struct msghdr msg;
@@ -443,10 +510,10 @@
     msg.msg_iov = &iov;
     msg.msg_iovlen = 1;
 
-    msg.msg_control = &cmsg;
-    msg.msg_controllen = sizeof (cmsg);
+    msg.msg_control = (caddr_t) &cmsg;
+    msg.msg_controllen = CMSG_SPACE (sizeof (struct cmsgcred));
     memset (&cmsg, 0, sizeof (cmsg));
-    cmsg.hdr.cmsg_len = sizeof (cmsg);
+    cmsg.hdr.cmsg_len = CMSG_LEN (sizeof (struct cmsgcred));
     cmsg.hdr.cmsg_level = SOL_SOCKET;
     cmsg.hdr.cmsg_type = SCM_CREDS;
 #endif
@@ -654,9 +721,10 @@
     gid_t c_gid;
 
 #ifdef HAVE_CMSGCRED
-    struct {
+    struct cmsgcred *cred;
+    union {
 	    struct cmsghdr hdr;
-	    struct cmsgcred cred;
+	    char cred[CMSG_SPACE (sizeof (struct cmsgcred))];
     } cmsg;
 #endif
 
@@ -683,8 +751,8 @@
 
 #ifdef HAVE_CMSGCRED
     memset(&cmsg, 0, sizeof(cmsg));
-    msg.msg_control = &cmsg;
-    msg.msg_controllen = sizeof(cmsg);
+    msg.msg_control = (caddr_t) &cmsg;
+    msg.msg_controllen = CMSG_SPACE (sizeof (struct cmsgcred));
 #endif
 
 retry:
@@ -701,7 +769,7 @@
         goto failed;
     }
 #ifdef HAVE_CMSGCRED
-    if (cmsg.hdr.cmsg_len < sizeof(cmsg) || cmsg.hdr.cmsg_type != SCM_CREDS) {
+    if (cmsg.hdr.cmsg_len < CMSG_LEN (sizeof (struct cmsgcred)) || cmsg.hdr.cmsg_type != SCM_CREDS) {
         GAM_DEBUG(DEBUG_INFO,
                   "Message from recvmsg() was not SCM_CREDS\n");
         goto failed;
@@ -727,9 +795,10 @@
             goto failed;
         }
 #elif defined(HAVE_CMSGCRED)
-        c_pid = cmsg.cred.cmcred_pid;
-        c_uid = cmsg.cred.cmcred_euid;
-        c_gid = cmsg.cred.cmcred_groups[0];
+        cred = (struct cmsgcred *) CMSG_DATA (&cmsg);
+        c_pid = cred->cmcred_pid;
+        c_uid = cred->cmcred_euid;
+        c_gid = cred->cmcred_groups[0];
 #else /* !SO_PEERCRED && !HAVE_CMSGCRED */
         GAM_DEBUG(DEBUG_INFO,
                   "Socket credentials not supported on this OS\n");
@@ -1288,14 +1357,17 @@
 
     // FIXME: drop and reacquire lock while blocked?
     gamin_data_lock(conn);
-    if (!gamin_data_event_ready(conn)) {
+    while ((ret = gamin_data_event_ready(conn)) == 0) {
         if (gamin_read_data(conn, fc->fd, 1) < 0) {
 	    gamin_try_reconnect(conn, fc->fd);
 	    FAMErrno = FAM_CONNECT;
 	    return (-1);
 	}
     }
-    ret = gamin_data_read_event(conn, fe);
+
+    if (ret > 0)
+        ret = gamin_data_read_event(conn, fe);
+
     gamin_data_unlock(conn);
 
     if (ret < 0) {
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/python/Makefile.am src/gamin-0.1.9/python/Makefile.am
--- origsrc/gamin-0.1.9/python/Makefile.am	2007-07-04 08:36:48.000000000 -0500
+++ src/gamin-0.1.9/python/Makefile.am	2007-08-12 15:13:11.609375000 -0500
@@ -12,7 +12,7 @@
 	gamin.c			\
 	gamin.py
 
-_gamin_la_LDFLAGS = -module -avoid-version -L$(top_builddir)/libgamin/.libs
+_gamin_la_LDFLAGS = -module -avoid-version -no-undefined -L$(top_builddir)/libgamin/.libs
 
 if WITH_PYTHON
 mylibs =			\
@@ -23,7 +23,7 @@
 python_LTLIBRARIES = _gamin.la
 
 _gamin_la_SOURCES = gamin.c
-_gamin_la_LIBADD = $(mylibs) 
+_gamin_la_LIBADD = $(mylibs) -lpython$(PYTHON_VERSION)
 
 install-data-local:
 	$(mkinstalldirs) $(DESTDIR)$(pythondir)
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/server/gam_channel.c src/gamin-0.1.9/server/gam_channel.c
--- origsrc/gamin-0.1.9/server/gam_channel.c	2007-07-04 08:36:49.000000000 -0500
+++ src/gamin-0.1.9/server/gam_channel.c	2007-08-12 15:31:32.187500000 -0500
@@ -7,6 +7,7 @@
 #include <sys/stat.h>
 #include <sys/un.h>
 #include <sys/uio.h>
+#include <string.h>
 #include "gam_error.h"
 #include "gam_connection.h"
 #include "gam_channel.h"
@@ -31,9 +32,9 @@
     char data[2] = { 0, 0 };
     int written;
 #if defined(HAVE_CMSGCRED) && !defined(LOCAL_CREDS)
-    struct {
+    union {
 	    struct cmsghdr hdr;
-	    struct cmsgcred cred;
+	    char cred[CMSG_SPACE (sizeof (struct cmsgcred))];
     } cmsg;
     struct iovec iov;
     struct msghdr msg;
@@ -45,10 +46,10 @@
     msg.msg_iov = &iov;
     msg.msg_iovlen = 1;
 
-    msg.msg_control = &cmsg;
-    msg.msg_controllen = sizeof (cmsg);
+    msg.msg_control = (caddr_t) &cmsg;
+    msg.msg_controllen = CMSG_SPACE (sizeof (struct cmsgcred));
     memset (&cmsg, 0, sizeof (cmsg));
-    cmsg.hdr.cmsg_len = sizeof (cmsg);
+    cmsg.hdr.cmsg_len = CMSG_LEN (sizeof (struct cmsgcred));
     cmsg.hdr.cmsg_level = SOL_SOCKET;
     cmsg.hdr.cmsg_type = SCM_CREDS;
 #endif
@@ -95,9 +96,10 @@
     gid_t c_gid;
 
 #ifdef HAVE_CMSGCRED
-    struct {
+    struct cmsgcred *cred;
+    union {
 	    struct cmsghdr hdr;
-	    struct cmsgcred cred;
+	    char cred[CMSG_SPACE (sizeof (struct cmsgcred))];
     } cmsg;
 #endif
 
@@ -124,8 +126,8 @@
 
 #ifdef HAVE_CMSGCRED
     memset(&cmsg, 0, sizeof(cmsg));
-    msg.msg_control = &cmsg;
-    msg.msg_controllen = sizeof(cmsg);
+    msg.msg_control = (caddr_t) &cmsg;
+    msg.msg_controllen = CMSG_SPACE (sizeof (struct cmsgcred));
 #endif
 
   retry:
@@ -142,7 +144,7 @@
         goto failed;
     }
 #ifdef HAVE_CMSGCRED
-    if (cmsg.hdr.cmsg_len < sizeof(cmsg) || cmsg.hdr.cmsg_type != SCM_CREDS) {
+    if (cmsg.hdr.cmsg_len < CMSG_LEN (sizeof (struct cmsgcred)) || cmsg.hdr.cmsg_type != SCM_CREDS) {
         GAM_DEBUG(DEBUG_INFO,
                   "Message from recvmsg() was not SCM_CREDS\n");
         goto failed;
@@ -168,9 +170,10 @@
             goto failed;
         }
 #elif defined(HAVE_CMSGCRED)
-	c_pid = cmsg.cred.cmcred_pid;
-	c_uid = cmsg.cred.cmcred_euid;
-	c_gid = cmsg.cred.cmcred_groups[0];
+	cred = (struct cmsgcred *) CMSG_DATA (&cmsg);
+	c_pid = cred->cmcred_pid;
+	c_uid = cred->cmcred_euid;
+	c_gid = cred->cmcred_groups[0];
 #else /* !SO_PEERCRED && !HAVE_CMSGCRED */
         GAM_DEBUG(DEBUG_INFO,
                   "Socket credentials not supported on this OS\n");
@@ -620,6 +623,7 @@
 {
     int fd;
     struct sockaddr_un addr;
+    struct stat st;
 
     fd = socket(PF_UNIX, SOCK_STREAM, 0);
     if (fd < 0) {
@@ -640,9 +644,19 @@
      * some extra protection checks. Also make sure the socket is created
      * with restricted mode
      */
-    if (!gam_check_secure_path(path)) {
+    if (!gam_check_secure_dir()) {
+	close(fd);
 	return (-1);
     }
+
+    if (stat(path, &st) == 0) {
+        /* bind() will fail if the socket already exists */
+        if (unlink(path) < 0) {
+            GAM_DEBUG(DEBUG_INFO, "Failed to remove %s\n", path);
+            close(fd);
+            return (-1);
+        }
+    }
     strncpy(&addr.sun_path[0], path, (sizeof(addr) - 4) - 1);
     umask(0077);
 #endif
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/server/gam_fs.c src/gamin-0.1.9/server/gam_fs.c
--- origsrc/gamin-0.1.9/server/gam_fs.c	2007-07-04 08:36:49.000000000 -0500
+++ src/gamin-0.1.9/server/gam_fs.c	2007-08-12 15:31:32.187500000 -0500
@@ -110,6 +110,7 @@
 	return strlen(fsb->path) - strlen (fsa->path);
 }
 
+#ifdef __linux__
 static void
 gam_fs_scan_mtab (void)
 {
@@ -165,10 +166,12 @@
 	gam_fs_free_filesystems ();
 	filesystems = g_list_sort (new_filesystems, gam_fs_filesystem_sort_cb);
 }
+#endif /* __linux__ */
 
 void
 gam_fs_init (void)
 {
+#ifdef __linux__
 	if (initialized == FALSE)
 	{
 		initialized = TRUE;
@@ -181,6 +184,7 @@
 		if (stat("/etc/mtab", &mtab_sbuf) != 0)
 		{
 			GAM_DEBUG(DEBUG_INFO, "Could not stat /etc/mtab\n");
+                        return;
 		}
 		gam_fs_scan_mtab ();
 	} else {
@@ -189,6 +193,7 @@
 		if (stat("/etc/mtab", &sbuf) != 0)
 		{
 			GAM_DEBUG(DEBUG_INFO, "Could not stat /etc/mtab\n");
+                        return;
 		}
 
 		/* /etc/mtab has changed */
@@ -199,6 +204,7 @@
 
 		mtab_sbuf = sbuf;
 	}
+#endif /* __linux__ */
 }
 
 gam_fs_mon_type
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/server/gam_node.c src/gamin-0.1.9/server/gam_node.c
--- origsrc/gamin-0.1.9/server/gam_node.c	2007-07-04 08:36:49.000000000 -0500
+++ src/gamin-0.1.9/server/gam_node.c	2007-08-12 15:31:32.203125000 -0500
@@ -23,6 +23,7 @@
 #include "gam_event.h"
 #include "gam_node.h"
 #include "gam_error.h"
+#include "gam_server.h"
 
 /**
  * Create a new node
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/server/gam_server.c src/gamin-0.1.9/server/gam_server.c
--- origsrc/gamin-0.1.9/server/gam_server.c	2007-07-04 08:36:49.000000000 -0500
+++ src/gamin-0.1.9/server/gam_server.c	2007-08-12 15:31:32.203125000 -0500
@@ -32,7 +32,7 @@
 #include "gam_server.h"
 #include "gam_channel.h"
 #include "gam_subscription.h"
-#include "gam_poll_generic.h"
+#include "gam_poll_basic.h"
 #ifdef ENABLE_INOTIFY
 #include "gam_inotify.h"
 #endif
@@ -438,7 +438,7 @@
 GamPollHandler
 gam_server_get_poll_handler (void)
 {
-	return __gam_kernel_handler;
+	return __gam_poll_handler;
 }
 
 gboolean
diff -urN -x CYGWIN-PATCHES -x 'aclocal.m4*' -x autom4te.cache -x config.cache -x config.log -x config.status -x config.h -x config.h.in -x ABOUT-NLS -x Makefile.in.in -x Makevars.template -x '*SlackBuild*' -x '*.egg-info' -x '*.class' -x '*.pyc' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x COPYING -x INSTALL -x compile -x config-ml.in -x config.guess -x config.sub -x depcomp -x elisp-comp -x install-sh -x ltmain.sh -x mdate-sh -x missing -x mkinstalldirs -x py-compile -x symlink-tree -x texinfo.tex -x ylwrap -x config.rpath -x Makefile.in -x makefile.in -x configure -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x intltool.m4 -x intltool-extract -x intltool-extract.in -x intltool-merge -x intltool-merge.in -x intltool-update -x intltool-update.in -x Makefile origsrc/gamin-0.1.9/tests/testing.c src/gamin-0.1.9/tests/testing.c
--- origsrc/gamin-0.1.9/tests/testing.c	2007-07-04 08:36:49.000000000 -0500
+++ src/gamin-0.1.9/tests/testing.c	2007-08-12 15:31:32.203125000 -0500
@@ -486,9 +486,9 @@
             return (-1);
         }
         /*
-         * wait at most 3 secs before declaring failure
+         * wait at most 7 secs before declaring failure
          */
-        while ((delay < 30) && (testState.nb_events < nb_events + count)) {
+        while ((delay < 70) && (testState.nb_events < nb_events + count)) {
             debugLoop(100);
 
 /*	    printf("+"); fflush(stdout); */
